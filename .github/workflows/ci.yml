name: CI

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - master

jobs:
  client:
    name: Client
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x" # Use a broader range of Node.js versions

      - name: Install client dependencies
        working-directory: ./apps/client
        run: yarn install

      - name: Lint client
        working-directory: ./apps/client
        run: yarn lint

      - name: Expo doctor
        working-directory: ./apps/client
        run: npx expo-doctor

      - name: Compile client
        working-directory: ./apps/client
        run: npx tsc --noEmit

  backend:
    name: Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x" # Use a broader range of Node.js versions

      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE appsuper_test;' -uroot -proot

      - name: Install backend dependencies
        working-directory: ./apps/backend
        run: yarn install

      - name: Lint backend
        working-directory: ./apps/backend
        run: yarn lint
      
      - name: Create .env file
        working-directory: ./apps/backend
        run: cp .env.example .env

      - name: Create .env.test file
        working-directory: ./apps/backend
        run: cp .env.test.example .env.test

      - name: Generate APP_KEY
        working-directory: ./apps/backend
        run: node ace generate:key
      
      - name: Compile backend
        working-directory: ./apps/backend
        run: npx tsc --noEmit

      - name: Test backend
        working-directory: ./apps/backend
        run: yarn test
